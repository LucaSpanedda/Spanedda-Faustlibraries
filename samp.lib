// THIS library
samp = library("samp.lib");
// Luca Spanedda's Standard Faust Libraries
import("stdls.lib");

/*
Samplers Library
*/

//----------------------------------------------------------------- SAMPLERS ---
sampler(memSec, readSpeed, x) =
    it.frwtable(
                    3, // interpolation order
                    192000 * (20), // max.SR * Seconds
                    .0, // start Point
                    ba.period(memSec * ma.SR), // writing index
                    x, // input
                    phasor(readSpeed/memSec) *
                      memSec * ma.SR// external Reading index (0-1)
                );

chunkSampler(memSec, readSpeed, jumpFreq, chunkDim, seed, x) =
    sampler * squareOut
        with{
            square = pwsquare(jumpFreq, chunkDim);
            reader =  splicePH(readSpeed/memSec, seed, square);
            readOut = reader : _, !, !;
            squareOut = reader : !, _, !;
            sampler =
                it.frwtable(
                    3, // interpolation order
                    192000 * (20), // max.SR * Seconds
                    .0, // start Point
                    ba.period(memSec * ma.SR), // writing index
                    x, // input
                    readOut * memSec * ma.SR// external Reading index (0-1)
                );
        };
//process = chunkSampler(4, 1, 8, .99, 2), chunkSampler(4, 1, 8, .99, 4);

chunkGrains(voices, memSec, readSpeed, jumpFreq, chunkDim, x)=
    par(i, voices,
            chunkSampler(memSec, readSpeed, jumpFreq, chunkDim, i, x/voices)
        ) :> (+,+);
//process = _ <: chunkGrains(8, 4, 1, 4, .99);

//pwg = hslider("slide",0,0,1,.001);
//ftg = hslider("freq.",0,0,100,.001);
