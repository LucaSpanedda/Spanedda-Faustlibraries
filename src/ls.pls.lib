/*******************************************************************************
* PLS : PULSE SIGNALS GENERATION
*******************************************************************************/
import("ls.lib");

// Dirac Impulse at Compile Time
dirac = 1 - (1 : mem);

// Synchronous pulse train in HZ
pulseTrain(f) = phasor0(f) : derivate + dirac;

// Synchronous pulse train in HZ with width in samples
pwTrain(f, samps) = ((phasor0(f) * SR) - (f * samps)) < 0;

// asynchronous pulse train in HZ : fBase = standard frequency, fMod = -/+ asynchronous deviation
asincPulseTrain(fBase, fMod, seed) = (phasor0 : derivate) ~ ((noise(seed), _ + dirac) : sah : abs : (_ * max(- fBase + 1, fMod) + fBase)) : _ + dirac;