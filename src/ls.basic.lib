/*******************************************************************************
* BASIC OPERATIONS AND SIGNALS
*******************************************************************************/
import("ls.lib");

// limit a signal                     
limit(low, high, x) = max(low, min(high, x));

// signal signum
signum(x) = (x > 0) - (x < 0);

// Unipolar to bipolar
uni2bi(x) = x * 2.0 - 1.0;

// Bipolar to unipolar
bi2uni(x) = (x + 1) * 0.5;

// only decimal pass
decimal(x) = x - int(x);

// only integer pass
integer(x) = int(x);

// first derivate
derivate(x) = x < x';

// shift in phase (0 to 1) giving only the fractional part of x
phwrap(ph, x) = x <: (_ + ph) - int(_ + ph);

// Linear interpolation
linInterpolate(x0, x1, delta) = x0 + delta * (x1 - x0);
siglinInterpol(order, x) = x : seq(r, order, interpolate)
with{
    interpolate(y) = y + .5 * (y' - y);
};

// Bilinear interpolation
bilinInterpolate(x0, x1, x0b, x1b, dt1, dt2) = 
    linInterpolate(
        linInterpolate(x0, x1, dTG1), 
        linInterpolate(x0b, x1b, dTG1),
        dt2)
    with{
        linInterpolate(x0, x1, delta) = x0 + delta * (x1-x0);
    };